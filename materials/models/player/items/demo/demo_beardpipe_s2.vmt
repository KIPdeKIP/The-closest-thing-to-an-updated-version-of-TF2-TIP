"VertexlitGeneric"
{
	"$baseTexture" "models\player\items\demo/demo_beardpipe_s2"
	"$bumpmap" "models\player\items\demo/demo_beardpipe_normal"
	"$detail" "effects/tiledfire/fireLayeredSlowTiled512.vtf"	
	"$detailscale" "5"
	"$detailblendfactor" .01
	"$detailblendmode" 6

	"$yellow" "0"
	"$one" "1"

	"$phong" "1"
	"$phongexponent" "8"
	"$phongboost" "2"
	"$lightwarptexture" "models/player/pyro/pyro_lightwarp"
	"$phongfresnelranges"	"{.25 1 4}"
	"$halflambert" "0"

	// Rim lighting parameters
	"$rimlight" "1"												// To enable rim lighting (requires phong)
	"$rimlightexponent"	 "4"										// Exponent for phong component of rim lighting	
	"$rimlightboost" ".5"	

	"$blendtintbybasealpha" "1" 
 	"$blendtintcoloroverbase" "0"  

	"$colortint_base" "{94 65 48}"
	"$color2" "{94 65 48}"
	"$colortint_tmp" "{0 0 0}" 

	// Cloaking
	"$cloakPassEnabled" "1"

	"Proxies"
	{
		"spy_invis"
		{
		}
		"AnimatedTexture"
		{
			"animatedtexturevar" "$detail"
			"animatedtextureframenumvar" "$detailframe"
			"animatedtextureframerate" 30
		}
		"BurnLevel"
		{
			"resultVar" "$detailblendfactor"
		}
		"YellowLevel"
		{
			"resultVar" "$yellow"
		}
		"Equals"
		{
			"srcVar1"  "$yellow"
			"resultVar" "$color2"
		}
		"ItemTintColor"
		{
			"resultVar" "$colortint_tmp" //dump the paint values into the temp variable
		}
		"SelectFirstIfNonZero"
		{
		"srcVar1" "$colortint_tmp" //if this !=0, use it
		"srcVar2" "$colortint_base"//otherwise, use the base color
		"resultVar" "$color2" //finally apply the correct color to the color2 parameter
					//you can use anything that's a color-based parameter here instead of $color2, depending on the desired effect.
		}

	}
}